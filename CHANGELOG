               __                __
              / /   ____  ____  / /_  ____  _____
             / /   / __ `/ __ `/ __ \/ __ \/ ___/
            / /___/ /_/ / /_/ / / / / /_/ (__  )
           /_____/\__,_/\__, /_/ /_/\____/____/
                       /____/

        High-order Lagrangian Hydrodynamics Miniapp


Version 3.0, released on Mar 27, 2020
=====================================

- Replaced the Laghos-2.0 custom implementations in the cuda/, raja/, occa/ and
  hip/ directories with direct general device support in the main Laghos sources
  based on MFEM-4.1

- With the above change different device backends can be selected at runtime,
  including cuda, raja, occa, hip, omp and more. See the -d command-line option.

- Added 'setup' makefile target to download and build the Laghos dependencies:
  HYPRE (2.11.2), METIS (4.0.3) and MFEM (master branch).

- Added 'tests' and 'checks' makefile targets to launch non-regression tests.

- Added default dimension options that generate internally the mesh:
  * 1D (-dim 1): data/segment01.mesh
  * 2D (-dim 2): data/square01_quad.mesh
  * 3D (-dim 3): data/cube01_hex.mesh

- The timing/ directory was deprecated. Use the scripts in the CEED benchmarks
  instead, https://github.com/CEED/benchmarks.


Version 2.0, released on Nov 19, 2018
=====================================

- Added a CUDA version of Laghos in the cuda/ directory.

- Added a RAJA version of Laghos in the raja/ directory.

- Added an OCCA version of Laghos in the occa/ directory.

- Added an AMR (adaptive mesh refinement) version in the amr/ directory.

- Replaced a viscosity "if statement" with a smooth step function.

- When using partial assembly (-pa option), support the Bernstein positive basis
  for the velocity .

- Added Travis CI regression testing on GitHub.


Version 1.1, released on Sep 28, 2018
=====================================

- Added a new example: Gresho vortex.

- Added instructions for building the CUDA and RAJA versions.

- Added a conservative time integrator (RK2Avg).

- Added computation of total energy.

- Split the LagrangianHydroOperator::Mult() into separate functions for
  assembly, velocity solve, internal energy solve.

- Improved the computations of the matrix diagonal by contracting the squares of
  the B matrices.

- Added diagonal preconditioners for both partial and full assembly.

- Fixed a bug in the evaluation of the material gamma values.

- Additional meshes that can be used for scaling tests.


Version 1.0, released on Dec 7, 2017
====================================

- Initial release.
